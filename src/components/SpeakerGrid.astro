---
import { parseAndWrapCaptions } from "../../utils/captionParser";

const { people, team, core } = Astro.props;

// Filter based on the `core` parameter
const members = core ? people.filter((p) => {
 return  team.includes(p.id)
}).filter((p) => p.imageUrl) : team;

// const filteredPeople = members.filter((p) => p.imageUrl).slice(0, 12);
const filteredPeople = members.filter((p) => p.imageUrl);

function personLink(person) {
  if (person.refs?.twitter) {
    return `https://twitter.com/${person.refs.twitter}`;
  } else if (person.refs?.bsky) {
    return `https://bsky.app/profile/${person.refs.bsky}`;
  } else if (person.refs?.linkedin) {
    return `https://www.linkedin.com/in/${person.refs.linkedin}`;
  } else if (person.refs?.github) {
    return `https://github.com/${person.refs.github}`;
  } else if (person.refs?.matrix) {
    return `https://matrix.to/#/${person.refs.matrix}`;
  } else if (person.refs?.designation) {
    return `${person.refs.designation}`;
  } else if (person.refs?.email) {
    return `mailto:${person.refs.email}`;
  } else {
    return "#";
  }
}
---

<div
  class="grid grid-cols-3 lg:grid-cols-4 xl:grid-cols-6  place-items-start"
>
  {
    filteredPeople.map((person) => (
      <div
        class={`max-w-xs w-full  max-h-[340px] bg-transparent overflow-hidden p-1 space-y-1 mb-2`}
      >
        <a href={personLink(person)} class={`${core ? "person-item" : ""}`}>
          <img
            src={person.imageUrl}
            alt={person.name}
            class="min-h-[110px] w-full md:h-48 object-cover object-center transition duration-200 ease-in"
          />
        </a>
        <div class="mt-4">
          <h3 class="text-[10px] pt-2 font-bold leading-3 md:leading-9 md:text-[16px] ">{person.name}</h3>
        
          {person.refs && (
            <p class="text-xs text-gray-500">
              {person.refs.twitter && `@${person.refs.twitter}`}
              {person.refs.email && ` | Email: ${person.refs.email}`}
              {person.refs.bsky && ` | bsky: ${person.refs.bsky}`}
              {person.refs.linkedin && ` | LinkedIn: ${person.refs.linkedin}`}
              {person.refs.github && ` | GitHub: ${person.refs.github}`}
              {person.refs.matrix && ` | Matrix: ${person.refs.matrix}`}
              {person.refs.email && ` | Email: ${person.refs.email}`}
            </p>
       <p class="text-xs text-gray-500" set:html={person.caption && parseAndWrapCaptions(person.caption)}></p>


            <p class="text-xs text-gray-500">
              {person.refs.designation && `${person.refs.designation}`}

            </p>
          )}
        </div>
      </div>
    ))
  }
</div>
