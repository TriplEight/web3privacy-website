---
const {
  images = [
    { webp: "/events/masonry/1.webp", png: "/events/masonry/1.png" },
    { webp: "/events/masonry/2.webp", png: "/events/masonry/2.png" },
    { webp: "/events/masonry/3.webp", png: "/events/masonry/3.png" },
    { webp: "/events/masonry/4.webp", png: "/events/masonry/4.png" },
    { webp: "/events/masonry/5.webp", png: "/events/masonry/5.png" },
    { webp: "/events/masonry/6.webp", png: "/events/masonry/6.png" },
    { webp: "/events/masonry/7.webp", png: "/events/masonry/7.png" },
    { webp: "/events/masonry/8.webp", png: "/events/masonry/8.png" },
    { webp: "/events/masonry/9.webp", png: "/events/masonry/9.png" },
  ],
} = Astro.props;
---

<!-- Display gallery with webp images -->
<div
  class="middle-pane-big grid grid-cols-2 lg:flex lg:flex-nowrap gap-2 md:gap-[3px] pb-2 md:pb-0"
>
  {
    images.slice(0, 4).map((image, index) => (
      <div class="flex-auto overflow-hidden">
        <img
          class="object-cover w-full max-h-[75px] md:max-h-[200px] cursor-pointer gallery-image"
          src={image.webp}
          alt={`Image ${index + 1}`}
          data-index={index}
        />
      </div>
    ))
  }
</div>

<div
  class="middle-pane-big grid grid-cols-2 lg:flex lg:flex-nowrap gap-2 md:gap-[3px]"
>
  {
    images.slice(4).map((image, index) => (
      <div class="flex-auto overflow-hidden">
        <img
          class="object-cover w-full max-h-[75px] md:max-h-[200px] cursor-pointer gallery-image"
          src={image.webp}
          alt={`Image ${index + 5}`}
          data-index={index + 4}
        />
      </div>
    ))
  }
</div>

<!-- Modal for fullscreen images -->
<div
  class="image-modal hidden fixed inset-0 bg-black flex-col flex items-center justify-center z-50"
>
  <div class="relative modal-content">
    <button class="absolute top-6 right-0 text-white close-modal z-100"
    ></button>
  </div>
  <div class="flex flex-col" style="width: 54vw; height: 60vh;">
    <img
      class="w-full h-full object-contain modal-image"
      src=""
      alt="Selected Image"
      loading="lazy"
    />
  </div>

  <div class="flex overflow-x-auto gap-3 mt-4 thumbnails">
    {
      images.map((image, index) => (
        <img
          class="w-24 h-24 object-contain cursor-pointer thumbnail-image"
          src={image.webp}
          alt={`Thumbnail ${index + 1}`}
          data-index={index}
        />
      ))
    }
  </div>
</div>

<script>
  let selectedIndex = 0;
  const images = [
    { webp: "/events/masonry/1.webp", png: "/events/masonry/1.png" },
    { webp: "/events/masonry/2.webp", png: "/events/masonry/2.png" },
    { webp: "/events/masonry/3.webp", png: "/events/masonry/3.png" },
    { webp: "/events/masonry/4.webp", png: "/events/masonry/4.png" },
    { webp: "/events/masonry/5.webp", png: "/events/masonry/5.png" },
    { webp: "/events/masonry/6.webp", png: "/events/masonry/6.png" },
    { webp: "/events/masonry/7.webp", png: "/events/masonry/7.png" },
    { webp: "/events/masonry/8.webp", png: "/events/masonry/8.png" },
    { webp: "/events/masonry/9.webp", png: "/events/masonry/9.png" },
  ];

  function openModal(index) {
    selectedIndex = index;
    updateModalImage();
    document.querySelector(".image-modal").classList.remove("hidden");
  }

  function closeModal() {
    document.querySelector(".image-modal").classList.add("hidden");
  }

  function updateModalImage() {
    const imageSrc = images[selectedIndex].png;
    document.querySelector(".modal-image").src = imageSrc;
  }

  function showNextImage() {
    selectedIndex = (selectedIndex + 1) % images.length;
    updateModalImage();
  }

  function showPrevImage() {
    selectedIndex = (selectedIndex - 1 + images.length) % images.length;
    updateModalImage();
  }

  document.querySelectorAll(".gallery-image").forEach((image) => {
    image.addEventListener("click", (event) => {
      const index = event.target.getAttribute("data-index");
      openModal(Number(index));
    });
  });

  document.querySelector(".close-modal").addEventListener("click", closeModal);

  document.querySelector(".image-modal").addEventListener("click", (event) => {
    if (event.target === document.querySelector(".image-modal")) closeModal();
  });

  document.querySelectorAll(".thumbnail-image").forEach((thumbnail) => {
    thumbnail.addEventListener("click", (event) => {
      const index = event.target.getAttribute("data-index");
      openModal(Number(index));
    });
  });

  document.addEventListener("keydown", (event) => {
    if (event.key === "ArrowRight") showNextImage();
    if (event.key === "ArrowLeft") showPrevImage();
    if (event.key === "Escape") closeModal();
  });
</script>
